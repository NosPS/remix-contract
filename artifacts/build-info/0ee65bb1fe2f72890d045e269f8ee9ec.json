{
	"id": "0ee65bb1fe2f72890d045e269f8ee9ec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ownable.sol\":172:1140  contract Ownable is Context {\r... */\n  mstore(0x40, 0x80)\n    /* \"Ownable.sol\":330:395  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":355:387  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"Ownable.sol\":374:386  _msgSender() */\n  tag_5\n    /* \"Ownable.sol\":374:384  _msgSender */\n  shl(0x20, tag_6)\n    /* \"Ownable.sol\":374:386  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"Ownable.sol\":355:373  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"Ownable.sol\":355:387  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Ownable.sol\":172:1140  contract Ownable is Context {\r... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"Ownable.sol\":946:1137  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_7:\n    /* \"Ownable.sol\":1020:1036  address oldOwner */\n  0x00\n    /* \"Ownable.sol\":1039:1045  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":1020:1045  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Ownable.sol\":1065:1073  newOwner */\n  dup2\n    /* \"Ownable.sol\":1056:1062  _owner */\n  0x00\n  dup1\n    /* \"Ownable.sol\":1056:1073  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Ownable.sol\":1120:1128  newOwner */\n  dup2\n    /* \"Ownable.sol\":1089:1129  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":1110:1118  oldOwner */\n  dup2\n    /* \"Ownable.sol\":1089:1129  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Ownable.sol\":1009:1137  {\r... */\n  pop\n    /* \"Ownable.sol\":946:1137  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"Ownable.sol\":172:1140  contract Ownable is Context {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ownable.sol\":172:1140  contract Ownable is Context {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Ownable.sol\":626:729  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"Ownable.sol\":403:490  function owner() public view virtual returns (address) {\r... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":737:938  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Ownable.sol\":626:729  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_7:\n        /* \"Ownable.sol\":549:561  _msgSender() */\n      tag_17\n        /* \"Ownable.sol\":549:559  _msgSender */\n      tag_18\n        /* \"Ownable.sol\":549:561  _msgSender() */\n      jump\t// in\n    tag_17:\n        /* \"Ownable.sol\":538:561  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":538:545  owner() */\n      tag_19\n        /* \"Ownable.sol\":538:543  owner */\n      tag_9\n        /* \"Ownable.sol\":538:545  owner() */\n      jump\t// in\n    tag_19:\n        /* \"Ownable.sol\":538:561  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":530:598  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_21\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"Ownable.sol\":691:721  _transferOwnership(address(0)) */\n      tag_24\n        /* \"Ownable.sol\":718:719  0 */\n      0x00\n        /* \"Ownable.sol\":691:709  _transferOwnership */\n      tag_25\n        /* \"Ownable.sol\":691:721  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_24:\n        /* \"Ownable.sol\":626:729  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Ownable.sol\":403:490  function owner() public view virtual returns (address) {\r... */\n    tag_9:\n        /* \"Ownable.sol\":449:456  address */\n      0x00\n        /* \"Ownable.sol\":476:482  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":469:482  return _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":403:490  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":737:938  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_15:\n        /* \"Ownable.sol\":549:561  _msgSender() */\n      tag_28\n        /* \"Ownable.sol\":549:559  _msgSender */\n      tag_18\n        /* \"Ownable.sol\":549:561  _msgSender() */\n      jump\t// in\n    tag_28:\n        /* \"Ownable.sol\":538:561  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":538:545  owner() */\n      tag_29\n        /* \"Ownable.sol\":538:543  owner */\n      tag_9\n        /* \"Ownable.sol\":538:545  owner() */\n      jump\t// in\n    tag_29:\n        /* \"Ownable.sol\":538:561  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":530:598  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n        /* \"Ownable.sol\":846:847  0 */\n      0x00\n        /* \"Ownable.sol\":826:848  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":826:834  newOwner */\n      dup2\n        /* \"Ownable.sol\":826:848  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Ownable.sol\":818:891  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"Ownable.sol\":902:930  _transferOwnership(newOwner) */\n      tag_36\n        /* \"Ownable.sol\":921:929  newOwner */\n      dup2\n        /* \"Ownable.sol\":902:920  _transferOwnership */\n      tag_25\n        /* \"Ownable.sol\":902:930  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_36:\n        /* \"Ownable.sol\":737:938  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":946:1137  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_25:\n        /* \"Ownable.sol\":1020:1036  address oldOwner */\n      0x00\n        /* \"Ownable.sol\":1039:1045  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1020:1045  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":1065:1073  newOwner */\n      dup2\n        /* \"Ownable.sol\":1056:1062  _owner */\n      0x00\n      dup1\n        /* \"Ownable.sol\":1056:1073  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Ownable.sol\":1120:1128  newOwner */\n      dup2\n        /* \"Ownable.sol\":1089:1129  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1110:1118  oldOwner */\n      dup2\n        /* \"Ownable.sol\":1089:1129  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Ownable.sol\":1009:1137  {\r... */\n      pop\n        /* \"Ownable.sol\":946:1137  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_40:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_42\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_14:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":228:347   */\n    tag_45:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_48\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_40\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_49:\n        /* \"#utility.yul\":574:598   */\n      tag_51\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:977   */\n    tag_53:\n        /* \"#utility.yul\":753:756   */\n      0x00\n        /* \"#utility.yul\":774:841   */\n      tag_55\n        /* \"#utility.yul\":838:840   */\n      0x26\n        /* \"#utility.yul\":833:836   */\n      dup4\n        /* \"#utility.yul\":774:841   */\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":767:841   */\n      swap2\n      pop\n        /* \"#utility.yul\":850:943   */\n      tag_57\n        /* \"#utility.yul\":939:942   */\n      dup3\n        /* \"#utility.yul\":850:943   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":968:970   */\n      0x40\n        /* \"#utility.yul\":963:966   */\n      dup3\n        /* \"#utility.yul\":959:971   */\n      add\n        /* \"#utility.yul\":952:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":611:977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":983:1349   */\n    tag_59:\n        /* \"#utility.yul\":1125:1128   */\n      0x00\n        /* \"#utility.yul\":1146:1213   */\n      tag_61\n        /* \"#utility.yul\":1210:1212   */\n      0x20\n        /* \"#utility.yul\":1205:1208   */\n      dup4\n        /* \"#utility.yul\":1146:1213   */\n      tag_56\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1139:1213   */\n      swap2\n      pop\n        /* \"#utility.yul\":1222:1315   */\n      tag_62\n        /* \"#utility.yul\":1311:1314   */\n      dup3\n        /* \"#utility.yul\":1222:1315   */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1340:1342   */\n      0x20\n        /* \"#utility.yul\":1335:1338   */\n      dup3\n        /* \"#utility.yul\":1331:1343   */\n      add\n        /* \"#utility.yul\":1324:1343   */\n      swap1\n      pop\n        /* \"#utility.yul\":983:1349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1355:1577   */\n    tag_11:\n        /* \"#utility.yul\":1448:1452   */\n      0x00\n        /* \"#utility.yul\":1486:1488   */\n      0x20\n        /* \"#utility.yul\":1475:1484   */\n      dup3\n        /* \"#utility.yul\":1471:1489   */\n      add\n        /* \"#utility.yul\":1463:1489   */\n      swap1\n      pop\n        /* \"#utility.yul\":1499:1570   */\n      tag_65\n        /* \"#utility.yul\":1567:1568   */\n      0x00\n        /* \"#utility.yul\":1556:1565   */\n      dup4\n        /* \"#utility.yul\":1552:1569   */\n      add\n        /* \"#utility.yul\":1543:1549   */\n      dup5\n        /* \"#utility.yul\":1499:1570   */\n      tag_49\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1355:1577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1583:2002   */\n    tag_35:\n        /* \"#utility.yul\":1749:1753   */\n      0x00\n        /* \"#utility.yul\":1787:1789   */\n      0x20\n        /* \"#utility.yul\":1776:1785   */\n      dup3\n        /* \"#utility.yul\":1772:1790   */\n      add\n        /* \"#utility.yul\":1764:1790   */\n      swap1\n      pop\n        /* \"#utility.yul\":1836:1845   */\n      dup2\n        /* \"#utility.yul\":1830:1834   */\n      dup2\n        /* \"#utility.yul\":1826:1846   */\n      sub\n        /* \"#utility.yul\":1822:1823   */\n      0x00\n        /* \"#utility.yul\":1811:1820   */\n      dup4\n        /* \"#utility.yul\":1807:1824   */\n      add\n        /* \"#utility.yul\":1800:1847   */\n      mstore\n        /* \"#utility.yul\":1864:1995   */\n      tag_67\n        /* \"#utility.yul\":1990:1994   */\n      dup2\n        /* \"#utility.yul\":1864:1995   */\n      tag_53\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1856:1995   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:2002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2008:2427   */\n    tag_22:\n        /* \"#utility.yul\":2174:2178   */\n      0x00\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2201:2210   */\n      dup3\n        /* \"#utility.yul\":2197:2215   */\n      add\n        /* \"#utility.yul\":2189:2215   */\n      swap1\n      pop\n        /* \"#utility.yul\":2261:2270   */\n      dup2\n        /* \"#utility.yul\":2255:2259   */\n      dup2\n        /* \"#utility.yul\":2251:2271   */\n      sub\n        /* \"#utility.yul\":2247:2248   */\n      0x00\n        /* \"#utility.yul\":2236:2245   */\n      dup4\n        /* \"#utility.yul\":2232:2249   */\n      add\n        /* \"#utility.yul\":2225:2272   */\n      mstore\n        /* \"#utility.yul\":2289:2420   */\n      tag_69\n        /* \"#utility.yul\":2415:2419   */\n      dup2\n        /* \"#utility.yul\":2289:2420   */\n      tag_59\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2281:2420   */\n      swap1\n      pop\n        /* \"#utility.yul\":2008:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2514:2683   */\n    tag_56:\n        /* \"#utility.yul\":2598:2609   */\n      0x00\n        /* \"#utility.yul\":2632:2638   */\n      dup3\n        /* \"#utility.yul\":2627:2630   */\n      dup3\n        /* \"#utility.yul\":2620:2639   */\n      mstore\n        /* \"#utility.yul\":2672:2676   */\n      0x20\n        /* \"#utility.yul\":2667:2670   */\n      dup3\n        /* \"#utility.yul\":2663:2677   */\n      add\n        /* \"#utility.yul\":2648:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2514:2683   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2689:2785   */\n    tag_52:\n        /* \"#utility.yul\":2726:2733   */\n      0x00\n        /* \"#utility.yul\":2755:2779   */\n      tag_74\n        /* \"#utility.yul\":2773:2778   */\n      dup3\n        /* \"#utility.yul\":2755:2779   */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2744:2779   */\n      swap1\n      pop\n        /* \"#utility.yul\":2689:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2917   */\n    tag_75:\n        /* \"#utility.yul\":2828:2835   */\n      0x00\n        /* \"#utility.yul\":2868:2910   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2861:2866   */\n      dup3\n        /* \"#utility.yul\":2857:2911   */\n      and\n        /* \"#utility.yul\":2846:2911   */\n      swap1\n      pop\n        /* \"#utility.yul\":2791:2917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3046:3163   */\n    tag_47:\n        /* \"#utility.yul\":3155:3156   */\n      0x00\n        /* \"#utility.yul\":3152:3153   */\n      dup1\n        /* \"#utility.yul\":3145:3157   */\n      revert\n        /* \"#utility.yul\":3169:3394   */\n    tag_58:\n        /* \"#utility.yul\":3309:3343   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3305:3306   */\n      0x00\n        /* \"#utility.yul\":3297:3303   */\n      dup3\n        /* \"#utility.yul\":3293:3307   */\n      add\n        /* \"#utility.yul\":3286:3344   */\n      mstore\n        /* \"#utility.yul\":3378:3386   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3373:3375   */\n      0x20\n        /* \"#utility.yul\":3365:3371   */\n      dup3\n        /* \"#utility.yul\":3361:3376   */\n      add\n        /* \"#utility.yul\":3354:3387   */\n      mstore\n        /* \"#utility.yul\":3169:3394   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3400:3582   */\n    tag_63:\n        /* \"#utility.yul\":3540:3574   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3536:3537   */\n      0x00\n        /* \"#utility.yul\":3528:3534   */\n      dup3\n        /* \"#utility.yul\":3524:3538   */\n      add\n        /* \"#utility.yul\":3517:3575   */\n      mstore\n        /* \"#utility.yul\":3400:3582   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3588:3710   */\n    tag_43:\n        /* \"#utility.yul\":3661:3685   */\n      tag_83\n        /* \"#utility.yul\":3679:3684   */\n      dup2\n        /* \"#utility.yul\":3661:3685   */\n      tag_52\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3654:3659   */\n      dup2\n        /* \"#utility.yul\":3651:3686   */\n      eq\n        /* \"#utility.yul\":3641:3704   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":3700:3701   */\n      0x00\n        /* \"#utility.yul\":3697:3698   */\n      dup1\n        /* \"#utility.yul\":3690:3702   */\n      revert\n        /* \"#utility.yul\":3641:3704   */\n    tag_84:\n        /* \"#utility.yul\":3588:3710   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205e0ad45f40359077e32047742df017544cc971b8b39b3e1ed30d162f5e99b41664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 50,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_118": {
									"entryPoint": 58,
									"id": 118,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6104fe8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b610058610112565b6040516100659190610396565b60405180910390f35b61008860048036038101906100839190610314565b61013b565b005b610092610233565b73ffffffffffffffffffffffffffffffffffffffff166100b0610112565b73ffffffffffffffffffffffffffffffffffffffff1614610106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fd906103d1565b60405180910390fd5b610110600061023b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610143610233565b73ffffffffffffffffffffffffffffffffffffffff16610161610112565b73ffffffffffffffffffffffffffffffffffffffff16146101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae906103d1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e906103b1565b60405180910390fd5b6102308161023b565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061030e816104b1565b92915050565b60006020828403121561032a57610329610434565b5b6000610338848285016102ff565b91505092915050565b61034a81610402565b82525050565b600061035d6026836103f1565b915061036882610439565b604082019050919050565b60006103806020836103f1565b915061038b82610488565b602082019050919050565b60006020820190506103ab6000830184610341565b92915050565b600060208201905081810360008301526103ca81610350565b9050919050565b600060208201905081810360008301526103ea81610373565b9050919050565b600082825260208201905092915050565b600061040d82610414565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6104ba81610402565b81146104c557600080fd5b5056fea26469706673582212205e0ad45f40359077e32047742df017544cc971b8b39b3e1ed30d162f5e99b41664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x4FE DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x314 JUMP JUMPDEST PUSH2 0x13B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x233 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB0 PUSH2 0x112 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD SWAP1 PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x110 PUSH1 0x0 PUSH2 0x23B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x233 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x161 PUSH2 0x112 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE SWAP1 PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x230 DUP2 PUSH2 0x23B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30E DUP2 PUSH2 0x4B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32A JUMPI PUSH2 0x329 PUSH2 0x434 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x338 DUP5 DUP3 DUP6 ADD PUSH2 0x2FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x34A DUP2 PUSH2 0x402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D PUSH1 0x26 DUP4 PUSH2 0x3F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x368 DUP3 PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x380 PUSH1 0x20 DUP4 PUSH2 0x3F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x38B DUP3 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x341 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CA DUP2 PUSH2 0x350 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EA DUP2 PUSH2 0x373 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D DUP3 PUSH2 0x414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4BA DUP2 PUSH2 0x402 JUMP JUMPDEST DUP2 EQ PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E EXP 0xD4 0x5F BLOCKHASH CALLDATALOAD SWAP1 PUSH24 0xE32047742DF017544CC971B8B39B3E1ED30D162F5E99B416 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "172:968:1:-:0;;;330:65;;;;;;;;;;355:32;374:12;:10;;;:12;;:::i;:::-;355:18;;;:32;;:::i;:::-;172:968;;640:96:0;693:7;719:10;712:17;;640:96;:::o;946:191:1:-;1020:16;1039:6;;;;;;;;;;;1020:25;;1065:8;1056:6;;:17;;;;;;;;;;;;;;;;;;1120:8;1089:40;;1110:8;1089:40;;;;;;;;;;;;1009:128;946:191;:::o;172:968::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_11": {
									"entryPoint": 563,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_118": {
									"entryPoint": 571,
									"id": 118,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_51": {
									"entryPoint": 274,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_77": {
									"entryPoint": 138,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_99": {
									"entryPoint": 315,
									"id": 99,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3713:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:2",
														"type": ""
													}
												],
												"src": "487:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "757:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "767:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "833:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "838:2:2",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "774:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "939:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "850:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "850:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "850:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "963:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "968:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "959:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "753:3:2",
														"type": ""
													}
												],
												"src": "611:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1129:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1139:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1210:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1146:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1222:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1222:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1324:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1335:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1340:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1331:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1324:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1117:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1125:3:2",
														"type": ""
													}
												],
												"src": "983:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1453:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1463:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1475:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1486:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1471:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1463:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1543:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1556:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1567:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1552:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1552:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1499:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1499:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1425:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1437:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1448:4:2",
														"type": ""
													}
												],
												"src": "1355:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1754:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1764:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1776:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1787:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1764:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1811:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1822:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1807:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1807:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1830:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1836:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1826:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1826:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1800:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1800:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1856:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1990:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1864:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1856:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1734:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1749:4:2",
														"type": ""
													}
												],
												"src": "1583:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2179:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2189:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2201:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2197:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2189:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2236:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2247:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2232:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2232:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2255:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2261:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2251:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2251:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2225:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2225:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2281:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2415:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2289:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2281:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2159:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2174:4:2",
														"type": ""
													}
												],
												"src": "2008:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2473:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2483:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2499:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2493:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2483:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2466:6:2",
														"type": ""
													}
												],
												"src": "2433:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2610:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2627:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2632:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2620:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2620:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2620:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2648:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2667:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2672:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2663:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2663:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2648:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2582:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2587:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2598:11:2",
														"type": ""
													}
												],
												"src": "2514:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2734:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2744:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2773:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2755:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2755:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2744:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2716:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2726:7:2",
														"type": ""
													}
												],
												"src": "2689:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2846:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2861:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2868:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2857:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2846:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2818:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2828:7:2",
														"type": ""
													}
												],
												"src": "2791:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3012:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3029:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3032:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3022:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3022:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3022:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2923:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3135:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3152:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3155:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3145:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3145:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3046:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3275:119:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3297:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3305:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3293:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3293:14:2"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3309:34:2",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3286:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3365:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3373:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3361:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3361:15:2"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3378:8:2",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3354:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3354:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3354:33:2"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3267:6:2",
														"type": ""
													}
												],
												"src": "3169:225:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3506:76:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3528:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3536:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3524:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3524:14:2"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3540:34:2",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3517:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3517:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3517:58:2"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3498:6:2",
														"type": ""
													}
												],
												"src": "3400:182:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3631:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3688:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3697:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3700:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3690:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3690:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3690:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3654:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3679:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3661:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3661:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3651:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3651:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3644:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3644:43:2"
															},
															"nodeType": "YulIf",
															"src": "3641:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3624:5:2",
														"type": ""
													}
												],
												"src": "3588:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b610058610112565b6040516100659190610396565b60405180910390f35b61008860048036038101906100839190610314565b61013b565b005b610092610233565b73ffffffffffffffffffffffffffffffffffffffff166100b0610112565b73ffffffffffffffffffffffffffffffffffffffff1614610106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fd906103d1565b60405180910390fd5b610110600061023b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610143610233565b73ffffffffffffffffffffffffffffffffffffffff16610161610112565b73ffffffffffffffffffffffffffffffffffffffff16146101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae906103d1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e906103b1565b60405180910390fd5b6102308161023b565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061030e816104b1565b92915050565b60006020828403121561032a57610329610434565b5b6000610338848285016102ff565b91505092915050565b61034a81610402565b82525050565b600061035d6026836103f1565b915061036882610439565b604082019050919050565b60006103806020836103f1565b915061038b82610488565b602082019050919050565b60006020820190506103ab6000830184610341565b92915050565b600060208201905081810360008301526103ca81610350565b9050919050565b600060208201905081810360008301526103ea81610373565b9050919050565b600082825260208201905092915050565b600061040d82610414565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6104ba81610402565b81146104c557600080fd5b5056fea26469706673582212205e0ad45f40359077e32047742df017544cc971b8b39b3e1ed30d162f5e99b41664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x314 JUMP JUMPDEST PUSH2 0x13B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x233 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB0 PUSH2 0x112 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD SWAP1 PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x110 PUSH1 0x0 PUSH2 0x23B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x233 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x161 PUSH2 0x112 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE SWAP1 PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x230 DUP2 PUSH2 0x23B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30E DUP2 PUSH2 0x4B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32A JUMPI PUSH2 0x329 PUSH2 0x434 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x338 DUP5 DUP3 DUP6 ADD PUSH2 0x2FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x34A DUP2 PUSH2 0x402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D PUSH1 0x26 DUP4 PUSH2 0x3F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x368 DUP3 PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x380 PUSH1 0x20 DUP4 PUSH2 0x3F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x38B DUP3 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x341 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CA DUP2 PUSH2 0x350 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EA DUP2 PUSH2 0x373 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D DUP3 PUSH2 0x414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4BA DUP2 PUSH2 0x402 JUMP JUMPDEST DUP2 EQ PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E EXP 0xD4 0x5F BLOCKHASH CALLDATALOAD SWAP1 PUSH24 0xE32047742DF017544CC971B8B39B3E1ED30D162F5E99B416 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "172:968:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;626:103;;;:::i;:::-;;403:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;737:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;626:103;549:12;:10;:12::i;:::-;538:23;;:7;:5;:7::i;:::-;:23;;;530:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;691:30:::1;718:1;691:18;:30::i;:::-;626:103::o:0;403:87::-;449:7;476:6;;;;;;;;;;;469:13;;403:87;:::o;737:201::-;549:12;:10;:12::i;:::-;538:23;;:7;:5;:7::i;:::-;:23;;;530:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;846:1:::1;826:22;;:8;:22;;;;818:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;902:28;921:8;902:18;:28::i;:::-;737:201:::0;:::o;640:96:0:-;693:7;719:10;712:17;;640:96;:::o;946:191:1:-;1020:16;1039:6;;;;;;;;;;;1020:25;;1065:8;1056:6;;:17;;;;;;;;;;;;;;;;;;1120:8;1089:40;;1110:8;1089:40;;;;;;;;;;;;1009:128;946:191;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:366::-;753:3;774:67;838:2;833:3;774:67;:::i;:::-;767:74;;850:93;939:3;850:93;:::i;:::-;968:2;963:3;959:12;952:19;;611:366;;;:::o;983:::-;1125:3;1146:67;1210:2;1205:3;1146:67;:::i;:::-;1139:74;;1222:93;1311:3;1222:93;:::i;:::-;1340:2;1335:3;1331:12;1324:19;;983:366;;;:::o;1355:222::-;1448:4;1486:2;1475:9;1471:18;1463:26;;1499:71;1567:1;1556:9;1552:17;1543:6;1499:71;:::i;:::-;1355:222;;;;:::o;1583:419::-;1749:4;1787:2;1776:9;1772:18;1764:26;;1836:9;1830:4;1826:20;1822:1;1811:9;1807:17;1800:47;1864:131;1990:4;1864:131;:::i;:::-;1856:139;;1583:419;;;:::o;2008:::-;2174:4;2212:2;2201:9;2197:18;2189:26;;2261:9;2255:4;2251:20;2247:1;2236:9;2232:17;2225:47;2289:131;2415:4;2289:131;:::i;:::-;2281:139;;2008:419;;;:::o;2514:169::-;2598:11;2632:6;2627:3;2620:19;2672:4;2667:3;2663:14;2648:29;;2514:169;;;;:::o;2689:96::-;2726:7;2755:24;2773:5;2755:24;:::i;:::-;2744:35;;2689:96;;;:::o;2791:126::-;2828:7;2868:42;2861:5;2857:54;2846:65;;2791:126;;;:::o;3046:117::-;3155:1;3152;3145:12;3169:225;3309:34;3305:1;3297:6;3293:14;3286:58;3378:8;3373:2;3365:6;3361:15;3354:33;3169:225;:::o;3400:182::-;3540:34;3536:1;3528:6;3524:14;3517:58;3400:182;:::o;3588:122::-;3661:24;3679:5;3661:24;:::i;:::-;3654:5;3651:35;3641:63;;3700:1;3697;3690:12;3641:63;3588:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "255600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2522",
								"renounceOwnership()": "30352",
								"transferOwnership(address)": "30745"
							},
							"internal": {
								"_transferOwnership(address)": "27981"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 172,
									"end": 1140,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 172,
									"end": 1140,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 172,
									"end": 1140,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 330,
									"end": 395,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 330,
									"end": 395,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 330,
									"end": 395,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 330,
									"end": 395,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 330,
									"end": 395,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 330,
									"end": 395,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 330,
									"end": 395,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 330,
									"end": 395,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 330,
									"end": 395,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 330,
									"end": 395,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 330,
									"end": 395,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 355,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 374,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 374,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 374,
									"end": 384,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 374,
									"end": 384,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 374,
									"end": 386,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 374,
									"end": 386,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 374,
									"end": 386,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 374,
									"end": 386,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 374,
									"end": 386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 355,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 355,
									"end": 373,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 355,
									"end": 373,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 355,
									"end": 387,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 355,
									"end": 387,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 355,
									"end": 387,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 355,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 355,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 172,
									"end": 1140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 172,
									"end": 1140,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 946,
									"end": 1137,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 946,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1036,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1039,
									"end": 1045,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1039,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1045,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1039,
									"end": 1045,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1045,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1045,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1045,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1045,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1065,
									"end": 1073,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1062,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1056,
									"end": 1062,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1073,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1120,
									"end": 1128,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1110,
									"end": 1118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1129,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1137,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 946,
									"end": 1137,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 946,
									"end": 1137,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 172,
									"end": 1140,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 172,
									"end": 1140,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 172,
									"end": 1140,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 1140,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 172,
									"end": 1140,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 1140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 1140,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 172,
									"end": 1140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 1140,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205e0ad45f40359077e32047742df017544cc971b8b39b3e1ed30d162f5e99b41664736f6c63430008070033",
									".code": [
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 1140,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 626,
											"end": 729,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 626,
											"end": 729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 626,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 626,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 626,
											"end": 729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 626,
											"end": 729,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 626,
											"end": 729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 626,
											"end": 729,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 403,
											"end": 490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 403,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 403,
											"end": 490,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 403,
											"end": 490,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 403,
											"end": 490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 403,
											"end": 490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 403,
											"end": 490,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 403,
											"end": 490,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 403,
											"end": 490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 737,
											"end": 938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 737,
											"end": 938,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 737,
											"end": 938,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 737,
											"end": 938,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 737,
											"end": 938,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 938,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 737,
											"end": 938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 737,
											"end": 938,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 938,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 737,
											"end": 938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 626,
											"end": 729,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 626,
											"end": 729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 549,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 549,
											"end": 561,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 549,
											"end": 561,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 549,
											"end": 561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 538,
											"end": 561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 538,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 538,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 538,
											"end": 545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 545,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 538,
											"end": 545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 538,
											"end": 561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 538,
											"end": 561,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 691,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 718,
											"end": 719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 691,
											"end": 721,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 691,
											"end": 721,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 691,
											"end": 721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 626,
											"end": 729,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 403,
											"end": 490,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 403,
											"end": 490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 482,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 476,
											"end": 482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 482,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 476,
											"end": 482,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 476,
											"end": 482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 482,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 476,
											"end": 482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 476,
											"end": 482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 469,
											"end": 482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 469,
											"end": 482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 403,
											"end": 490,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 737,
											"end": 938,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 737,
											"end": 938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 549,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 549,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 549,
											"end": 561,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 549,
											"end": 561,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 549,
											"end": 561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 538,
											"end": 561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 538,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 538,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 538,
											"end": 545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 545,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 538,
											"end": 545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 538,
											"end": 561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 538,
											"end": 561,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 530,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 530,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 846,
											"end": 847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 848,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 848,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 826,
											"end": 834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 848,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 848,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 826,
											"end": 848,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 826,
											"end": 848,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 818,
											"end": 891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 891,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 818,
											"end": 891,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 818,
											"end": 891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 818,
											"end": 891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 818,
											"end": 891,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 818,
											"end": 891,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 818,
											"end": 891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 891,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 818,
											"end": 891,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 818,
											"end": 891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 902,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 921,
											"end": 929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 902,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 902,
											"end": 930,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 930,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 902,
											"end": 930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 737,
											"end": 938,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 946,
											"end": 1137,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 946,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1020,
											"end": 1045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1129,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1009,
											"end": 1137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 946,
											"end": 1137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 946,
											"end": 1137,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 977,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 611,
											"end": 977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 753,
											"end": 756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 838,
											"end": 840,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 833,
											"end": 836,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 774,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 841,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 850,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 939,
											"end": 942,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 850,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 968,
											"end": 970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 959,
											"end": 971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 952,
											"end": 971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 977,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 611,
											"end": 977,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 611,
											"end": 977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 977,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1210,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1340,
											"end": 1342,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1335,
											"end": 1338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1331,
											"end": 1343,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1488,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1484,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1463,
											"end": 1489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1567,
											"end": 1568,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1552,
											"end": 1569,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1549,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1749,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1790,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1820,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1800,
											"end": 1847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1990,
											"end": 1994,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1995,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1856,
											"end": 1995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2201,
											"end": 2210,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2271,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2248,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2245,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2232,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2225,
											"end": 2272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2415,
											"end": 2419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2638,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2620,
											"end": 2639,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 2670,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2677,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2726,
											"end": 2733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2773,
											"end": 2778,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2828,
											"end": 2835,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2910,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 2911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2911,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3046,
											"end": 3163,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3046,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3157,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3394,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3169,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3309,
											"end": 3343,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3305,
											"end": 3306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3303,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3293,
											"end": 3307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3378,
											"end": 3386,
											"name": "PUSH",
											"source": 2,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3373,
											"end": 3375,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3365,
											"end": 3371,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3361,
											"end": 3376,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3354,
											"end": 3387,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3394,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3400,
											"end": 3582,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3400,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3574,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3536,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3524,
											"end": 3538,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3517,
											"end": 3575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3582,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3588,
											"end": 3710,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3588,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3679,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3659,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3651,
											"end": 3686,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3588,
											"end": 3710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3588,
											"end": 3710,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Ownable.sol\":{\"keccak256\":\"0x06d2f3762306362689a6819dee1040804660249b1844252dc442f9804e396f21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72a7ecb7cca71bd29a904b4f9a596f35f1629055b2741e29a42ad3af284637b1\",\"dweb:/ipfs/QmNaQPB8h5Wk3QksDEfutDwD9KgddpCzFhSNwtwTyBPcEZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 28,
								"contract": "Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "702:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "712:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:0"
									},
									"scope": 21,
									"src": "640:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "809:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "819:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:0"
									},
									"scope": 21,
									"src": "742:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "608:235:0",
							"usedErrors": []
						}
					],
					"src": "86:758:0"
				},
				"id": 0
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"Ownable": [
							119
						]
					},
					"id": 120,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 120,
							"sourceUnit": 22,
							"src": "117:51:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 25,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "192:7:1"
									},
									"id": 26,
									"nodeType": "InheritanceSpecifier",
									"src": "192:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 119,
							"linearizedBaseContracts": [
								119,
								21
							],
							"name": "Ownable",
							"nameLocation": "181:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "223:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "207:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "207:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 34,
									"name": "OwnershipTransferred",
									"nameLocation": "244:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "281:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "265:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "312:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "296:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:57:1"
									},
									"src": "238:84:1"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "344:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 38,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "374:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "374:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "355:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "355:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "355:32:1"
											}
										]
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "341:2:1"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "344:0:1"
									},
									"scope": 119,
									"src": "330:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "458:32:1",
										"statements": [
											{
												"expression": {
													"id": 48,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "476:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 47,
												"id": 49,
												"nodeType": "Return",
												"src": "469:13:1"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "412:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:2:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "449:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:1"
									},
									"scope": 119,
									"src": "403:87:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "519:99:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 54,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "538:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "538:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "549:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "549:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "538:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "563:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "530:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "530:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "530:68:1"
											},
											{
												"id": 62,
												"nodeType": "PlaceholderStatement",
												"src": "609:1:1"
											}
										]
									},
									"id": 64,
									"name": "onlyOwner",
									"nameLocation": "507:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "516:2:1"
									},
									"src": "498:120:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "680:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "718:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "710:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 70,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "710:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "710:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 69,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "691:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "691:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "691:30:1"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 67,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 66,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "670:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "670:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "635:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "652:2:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:0:1"
									},
									"scope": 119,
									"src": "626:103:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "807:131:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 85,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "826:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 88,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "846:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "838:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 86,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "838:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "838:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "826:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "850:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 84,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "818:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "818:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "818:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 95,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "921:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 94,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "902:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "902:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "902:28:1"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 82,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 81,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "797:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "797:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "746:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "772:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "764:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:18:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:0:1"
									},
									"scope": 119,
									"src": "737:201:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "1009:128:1",
										"statements": [
											{
												"assignments": [
													105
												],
												"declarations": [
													{
														"constant": false,
														"id": 105,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1028:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 117,
														"src": "1020:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 104,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1020:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 107,
												"initialValue": {
													"id": 106,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1039:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1020:25:1"
											},
											{
												"expression": {
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 108,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1056:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 109,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "1065:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1056:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1056:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 113,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1110:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 114,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1120:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 112,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1089:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1089:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "EmitStatement",
												"src": "1084:45:1"
											}
										]
									},
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "955:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "982:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "974:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:18:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:1"
									},
									"scope": 119,
									"src": "946:191:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 120,
							"src": "172:968:1",
							"usedErrors": []
						}
					],
					"src": "90:1050:1"
				},
				"id": 1
			}
		}
	}
}